@model IEnumerable<Proyecto_Repuestos.Entities.OrdenEncabezadoEnt>

@{
    ViewBag.Title = "CrearOrden";
}

@using (Html.BeginForm("CrearFactura", "Facturas", FormMethod.Post))
{
    <nav id="navigation">

        <div class="container">
            <div id="responsive-nav">

                <ul class="main-nav nav navbar-nav">
                    <li><a href="@Url.Action("Index","Home")">Inicio</a></li>
                    <li><a href="@Url.Action("RepOriginales","Producto")">Originales</a></li>
                    <li><a href="@Url.Action("RepGenericos","Producto")">Genericos</a></li>
                    <li><a href="@Url.Action("RepUsados","Producto")">Usados</a></li>
                    <li class="active"><a style=" color: red;" href="@Url.Action("Usuarios","Admin")">Panel Admin</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="section">
        <div>
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Crear Orden de Compra</h5>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="Cliente">Proveedor</label>
                    @Html.DropDownList("proveedorID", ViewBag.Combo as List<SelectListItem>, new { @class = "form-control", @id = "proveedorID" })
                </div>
                <div hidden class="form-group">
                    <select id="estadoOrden" class="form-control" required>
                        <option value="2">Pendiente</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="Tipo">Tipo</label>
                    <select id="tipoOrden" class="form-control" required>
                        <option value="Efectivo">Efectivo</option>
                        <option value="Tarjeta">Tarjeta</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="FacturarA">Facturar a</label>
                    <input type="text" class="form-control" id="facturarA" placeholder="A nombre de" required>
                </div>
                <div class="form-group">
                    <label for="EntregarA">Entregar a</label>
                    <input type="text" class="form-control" id="entregarA" placeholder="Se entrega a" required>
                </div>
                <div class="form-group">
                    <label for="Descripcion">Descripción</label>
                    <input type="text" class="form-control" id="descripcionOrden" placeholder="Ingrese una descripción" required>
                </div>

                <br />
                <hr />
                <h5>Agregue los productos de la orden de compra</h5>

                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-12" style="padding-top: 40px;">
                        <label class="margin-15px-bottom text-black">Producto</label>
                        @Html.DropDownList("Producto", ViewBag.ComboP as List<SelectListItem>, new { @class = "form-control", @id = "Producto" })
                    </div>
                    <div class="col-lg-5 col-md-5 col-sm-5" style="padding-top: 40px;">
                        <label class="margin-15px-bottom text-black">Cantidad</label>
                        <input class="form-control" maxlength="50" id="Cantidad" type="number" step="1" />
                    </div>
                    <div class="col-lg-1 col-md-1 col-sm-2" style="padding-top: 65px">
                        <button type="button" class="btn btn-success btn-block" style="color: white;" onclick="agregarProducto()"><span class="fas fa-plus"></span></button>
                    </div>
                </div>

                <br />
                <hr />
                <h5>Listado de productos</h5>
                <br />
                <div class="row" style="margin: 5px;">
                    <div class="col-12">
                        <div class="table-responsive">
                            <table class="table bootstrap-datatable datatable">
                                <thead>
                                    <tr>
                                        <th class="col-5" style="min-width: 50px;">Código del producto</th>
                                        <th class="col-2">Cantidad</th>
                                        <th style="text-align: center; min-width: 70px;" class="col-1"></th>
                                    </tr>
                                </thead>

                                <tbody id="ordenDetalle"></tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <a href="@Url.Action("Ordenes","Admin")" type="button" class="btn btn-danger">Cancelar</a>
                <button type="button" class="btn btn-success" id="btnCrearOrden">Registrar</button>
            </div>
        </div>
    </div>
}

<script>
    document.getElementById("btnCrearOrden").addEventListener("click", function () {
        var proveedorID = document.getElementById("proveedorID").value;
        var estadoOrden = document.getElementById("estadoOrden").value;
        var tipoOrden = document.getElementById("tipoOrden").value;
        var facturarA = document.getElementById("facturarA").value;
        var entregarA = document.getElementById("entregarA").value;
        var descripcionOrden = document.getElementById("descripcionOrden").value;
        if (proveedorID == "" || tipoOrden == "") {
            Swal.fire({
                text: 'Faltan datos en la factura, por favor verifique',
                icon: 'warning'
            });
            return;
        }

        var data = {
            orden_id: 0,
            proveedor_id: proveedorID,
            estado_id: estadoOrden,
            orden_tipo: tipoOrden,
            orden_fecha: new Date(),
            orden_facturarA: facturarA,
            orden_entregarA: entregarA,
            orden_descripcion: descripcionOrden,
            orden_detalle: listaProductos
        };

        if (data.orden_detalle.length === 0) {
            Swal.fire({
                text: 'Debe ingresar al menos un producto a la orden, por favor verifique',
                icon: 'warning'
            });
            return;
        }

        fetch("https://localhost:44376/api/RegistrarOrden", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(result => {
                Swal.fire({
                    text: result,
                    icon: 'success'
                });
                limpiarCampos()
            })
            .catch(error => {
                console.error("Error al enviar la solicitud: ", error);
            });

    });

    var listaProductos = [];

    function agregarProducto() {
        var Producto = document.getElementById('Producto').value;
        var Cantidad = document.getElementById('Cantidad').value;
        if (Producto === "") {
            Swal.fire({
                text: 'Seleccione un producto',
                icon: 'warning'
            });
            return;
        } else if (Cantidad === "") {
            Swal.fire({
                text: 'Digite la cantidad',
                icon: 'warning'
            });
            return;
        }

        var productoExistente = listaProductos.find(producto => producto.producto_id === Producto);

        if (productoExistente) {
            Swal.fire({
                text: 'Este producto ya se encuentra en la lista',
                icon: 'warning'
            });
            return;
        }

        listaProductos.push({
            ordenD_id: 0,
            producto_id: Producto,
            producto_cantidad: Cantidad,
        });

        document.getElementById('Producto').value = '';
        document.getElementById('Cantidad').value = '';

        actualizarTablaDetalle();
    }

    function eliminarProducto(index) {
        listaProductos.splice(index, 1);
        actualizarTablaDetalle();
    }

    function actualizarTablaDetalle() {
        var ordenDetalle = document.getElementById('ordenDetalle');
        ordenDetalle.innerHTML = '';

        listaProductos.forEach(function (datos, index) {
            var row = ordenDetalle.insertRow();

            var productoCell = row.insertCell(0);
            productoCell.innerHTML = datos.producto_id;

            var cantidadCell = row.insertCell(1);
            cantidadCell.innerHTML = datos.producto_cantidad;

            var quitarCell = row.insertCell(2);
            var quitarButton = document.createElement('button');
            quitarButton.className = 'btn btn-danger';
            quitarButton.innerHTML = '<span class="fas fa-trash"></span>';
            quitarButton.setAttribute('onclick', `eliminarProducto(${index})`);
            quitarCell.appendChild(quitarButton);
        });
    }

    function limpiarCampos() {
        document.getElementById("proveedorID").value = "";
        document.getElementById("tipoOrden").value = "";
        document.getElementById("facturarA").value = "";
        document.getElementById("entregarA").value = "";
        document.getElementById("descripcionOrden").value = "";
        var ordenDetalle = document.getElementById('ordenDetalle');
        listaProductos = [];
        ordenDetalle.innerHTML = '';
    }
</script>

<style>
    .botonPlus {
        margin-left: 15px;
        margin-right: 15px;
    }
</style>